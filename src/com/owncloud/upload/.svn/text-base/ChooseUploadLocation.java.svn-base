package com.owncloud.upload;

import java.util.ArrayList;
import java.util.List;

import org.apache.jackrabbit.webdav.MultiStatus;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.owncloud.R;
import com.owncloud.activity.CreateNewDirectory;
import com.sufalam.WebdavMethodImpl;
import com.sufalam.actionbar.NewQAAdapter;

public class ChooseUploadLocation extends WebdavMethodImpl implements
		OnClickListener {

	Button mCancel;
	Button mChoose;
	Button mListBack;

	ImageButton mCreateFolder;

	TextView mDirText;

	List<String> listName = new ArrayList<String>();

	ListView mListView;
	String mUrl;
	List<String> listUrl = new ArrayList<String>();
	NewQAAdapter adapter;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);

		setContentView(R.layout.uploadlocation);

		mListView = (ListView) findViewById(R.id.listview);
		mListBack = (Button) findViewById(R.id.backList);
		mDirText = (TextView) findViewById(R.id.dirText);
		mCreateFolder = (ImageButton) findViewById(R.id.createFolder);

		mCancel = (Button) findViewById(R.id.cancel);
		mChoose = (Button) findViewById(R.id.choose);
		mListBack.setOnClickListener(this);
		mCancel.setOnClickListener(this);
		mChoose.setOnClickListener(this);
		mCreateFolder.setOnClickListener(this);

		mUrl = getIntent().getExtras().getString("Url");
		if (mUrl.equals(mainUrl)) {
			mListBack.setVisibility(View.GONE);
		} else {
			mListBack.setVisibility(View.VISIBLE);
		}
		adapter = new NewQAAdapter(this, "Upload");
		ListAllFiles();

		mListView.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {

				if (!((listUrl.get(position).substring(listUrl.get(position)
						.length() - 1)).equals("/"))) {

					view.setClickable(false);
					id = position;

				} else {
					// mLastUrl = url;
					mUrl = baseUrl
							+ listUrl.get(position).substring(0,
									listUrl.get(position).length() - 1);
					ListAllFiles();
				}
				if (mUrl.equals(mainUrl)) {
					mListBack.setVisibility(View.GONE);
				} else {
					mListBack.setVisibility(View.VISIBLE);
				}
			}
		});
	}

	public void ListAllFiles() {
		listName.clear();
		listUrl.clear();

		MultiStatus ms = listAll(mUrl, httpClient);
		// if (ms.equals(null)) {
		if (ms == null) {
			Toast.makeText(getApplicationContext(),
					"There is some problem in listing files", 1).show();
		} else {
			// listUrl = new String[ms.getResponses().length - 1];
			// listName = new String[ms.getResponses().length - 1];
			int j = 0;
			for (int i = 1; i <= ms.getResponses().length - 1; i++) {
				String respString = ms.getResponses()[i].getHref();

				String fileName = new StringBuffer(respString).reverse()
						.toString();
				if ((fileName.substring(0, 1)).equals("/")) {

					fileName = fileName.substring(1);

					listUrl.add(ms.getResponses()[i].getHref());
					Log.i("ListUrl ", listUrl.get(j));
					String[] fileNameArray = fileName.split("/");

					listName.add(new StringBuffer(fileNameArray[0]).reverse()
							.toString());
					Log.i("ListName ", listName.get(j++));
					/*
					 * String Name = new
					 * StringBuffer(fileNameArray[0]).reverse() .toString();
					 * 
					 * if (textList == null) { textList = listName[i - 1] +
					 * "\n"; } else { textList = textList + listName[i - 1] +
					 * "\n"; }
					 */

				}
				Log.d("response", respString);
			}

			adapter.setData(listName.toArray(new String[listName.size()]));
			mListView.setAdapter(adapter);

		}

	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		if (v == mCancel) {
			showDialog(0);
			t = new Thread() {
				public void run() {
					Message msg = handler.obtainMessage();
					msg.obj = "mCancel";
					handler.sendMessage(msg);
				}
			};
			t.start();
		} else if (v == mChoose) {

			showDialog(0);
			t = new Thread() {
				public void run() {
					Message msg = handler.obtainMessage();
					msg.obj = "mChoose";
					handler.sendMessage(msg);
				}
			};
			t.start();
		} else if (v == mListBack) {
			showDialog(0);
			t = new Thread() {
				public void run() {
					Message msg = handler.obtainMessage();
					msg.obj = "back";
					handler.sendMessage(msg);
				}
			};
			t.start();
		} else if (v == mCreateFolder) {
			showDialog(0);
			t = new Thread() {
				public void run() {
					Message msg = handler.obtainMessage();
					msg.obj = "CreateFolder";
					handler.sendMessage(msg);
				}
			};
			t.start();
		}
	}

	private Handler handler = new Handler() {

		public void handleMessage(Message msg) {

			if (msg.obj.toString().contentEquals("mCancel")) {
//				startActivity(new Intent(getApplicationContext(),
//						FileExplorer.class).putExtra("fileLocation", ""));
				finish();
			} else if (msg.obj.toString().contentEquals("mChoose")) {
				// startActivity(new Intent(getApplicationContext(),
				// FileExplorer.class).putExtra("fileLocation", mUrl));
				fileLocation = mUrl;
				String[] name = mUrl.split("webdav.php/");
				try {
					mOwnCloud.setText("Upload : ownCloud/" + name[1]);
				} catch (Exception e) {
					mOwnCloud.setText("Upload : ownCloud/");
				}
				finish();
				Log.i("Location : ", mUrl);
			} else if (msg.obj.toString().contentEquals("back")) {

				String fileName = new StringBuffer(mUrl).reverse().toString();
				if ((fileName.substring(0, 1)).equals("/")) {
					fileName = fileName.substring(1);
				}
				fileName = new StringBuffer(fileName).reverse().toString();
				String[] fileNameArray = fileName.split("/");
				for (int i = 0; i < fileNameArray.length - 1; i++) {
					if (i == 0) {
						mUrl = fileNameArray[i];
					} else {
						mUrl = mUrl + "/" + fileNameArray[i];
					}
				}
				if (mUrl.equals(mainUrl)) {
					mListBack.setVisibility(View.GONE);
				}
				// Toast.makeText(getApplicationContext(), url, 1).show();
				Log.d("mUrl", mUrl);
				ListAllFiles();
			} else if (msg.obj.toString().contentEquals("CreateFolder")) {
				startActivity(new Intent(getApplicationContext(),
						CreateNewDirectory.class).putExtra("From", "Upload")
						.putExtra("Url", mUrl));
				finish();

			}
			removeDialog(0);
		}

	};
}
